[tool.poetry]
name = "fracfocus"
version = "1.0.0"
description = "Automation service for downloading data from FracFocus"
authors = ["Brock Friedrich <brocklfriedrich@gmail.com>"]


[tool.poetry.dependencies]
python = "^3.7"
pyyaml = "^5.2"
requests = "^2.22.0"
requests-oauthlib = "^1.3.0"
sqlalchemy = "^1.3.12"
sentry-sdk = "^0.13.5"
oauthlib = "^3.1.0"
click = "^7.0"
psycopg2-binary = "^2.8.4"
flask = "^1.1.1"
flask-sqlalchemy = "^2.4.1"
flask-migrate = "^2.5.2"
flask-restful = "^0.3.7"
python-dotenv = "^0.10.3"
attrdict = "^2.0.1"
requests-mock = "^1.7.0"
tomlkit = "^0.5.8"
logutils = "^0.3.5"
datadog = "^0.33.0"
json_log_formatter = "^0.2.0"
gunicorn = "^20.0.4"
marshmallow-sqlalchemy = "^0.21.0"
importlib-metadata = "<0.24,>=0.23"
attrs = "^19.3.0"
pyparsing = "^2.4.6"
flask-debugtoolbar = "*"
pandas = "^0.25.3"

[tool.poetry.dev-dependencies]
black = { version = "*", allow-prereleases = true }
mypy = "*"
pylint = "*"
ipython = "*"
matplotlib = "*"
pytest = "*"
pytest-cov = "*"
docker = "*"
boto3 = "*"
hypothesis = "*"
requests-mock = "*"
redis = "^3.3.11"
codecov = "^2.0.15"
coverage = {version = "^5.0", extras = ["toml"]}
flake8 = "^3.7.9"


[tool.poetry.scripts]
fracfocus = "fracfocus.manage:main"


[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    "pragma: no cover",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "logger.debug",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.isort]
force_grid_wrap = 0
include_trailing_comma = true
line_length = 120
lines_after_imports = 2
multi_line_output = 3
use_parentheses = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"


